import os
import shutil


#?    Метод	                                Описание
#-------------------+---------------------------------------------------------------|
#   copyfile()	            Копирует содержимое одного файла в другой.
#   copy()	                Копирует файл вместе с его правами доступа.
#   shutil.copymode()       Копирует права доступа (режим доступа) с одного файла (src) на другой файл (dst).
#                               Она не копирует содержимое файла или метаданные, такие как владельцы или временные метки — только права доступа.
#   move()	                Перемещает файл в другую директорию и удаляет исходный.
#   rename()	            Переименовывает файл.
#   remove()	            Удаляет указанный файл.
#   exists()	            Проверяет существование файла или директории.
#   getsize()	            Возвращает размер файла в байтах.
#   getatime()	            Определяет время последнего доступа к файлу.
#   getctime()	            Возвращает дату создания файла.
#   getmtime()	            Показывает время последнего изменения файла.


shutil.copyfile("constrains.txt", "txt_files/data.txt")  #? Копирование содержимого одного файла в другой
shutil.copy("constrains.txt", "txt_files/data.txt")   #? Копирование файла с сохранением прав доступа
shutil.copymode(".venv", "figure")  #? Копирует права доступа (режим доступа)
"""
Как это работает?(copymode)
        Функция считывает режим доступа (permissions) исходного файла (src) с помощью os.stat.
        Затем она применяет этот режим к целевому файлу (dst) с помощью os.chmod.
"""
#? Копирует не только права доступа, но и другие метаданные, такие как время последнего доступа и изменения:
shutil.copystat("OS_lib_2_rmtree.py", "testing.py")
#? Если вам нужно явно установить права доступа, используйте os.chmod:
os.chmod("OS_Shutil_libs.py", 0o766)
print("OS_Shutil_libs.py mode:", oct(os.stat("OS_Shutil_libs.py").st_mode)[-3:])    # # Выведет: '766'
print